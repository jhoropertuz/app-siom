{"version":3,"sources":["webpack:///src/app/paginasInternas/entrega-oxigem/entrega-oxigem.page.html","webpack:///src/app/paginasInternas/entrega-oxigem/entrega-oxigem-routing.module.ts","webpack:///src/app/paginasInternas/entrega-oxigem/entrega-oxigem.module.ts","webpack:///src/app/paginasInternas/entrega-oxigem/entrega-oxigem.page.scss","webpack:///src/app/paginasInternas/entrega-oxigem/entrega-oxigem.page.ts"],"names":["routes","path","component","EntregaOxigemPageRoutingModule","imports","forChild","exports","EntregaOxigemPageModule","declarations","EntregaOxigemPage","DatosServicioService","AuthService","formBuilder","DatosEquiposService","Router","BaseService","Sweetalert","ActivatedRoute","codigo","coordenadas","lat","lng","registrarPersona","formularioCompleto","personaId","permisosFirma","validation_messages","type","message","equipos","getEquipos","length","otrosPendientes","forEach","equipo","push","console","log","notificacion","navigateByUrl","form_persona_entrega","group","personaTipoIdentificacion","compose","required","personaIdentificacion","form_registrar_persona_entrega","personaNombres","personaApellidos","personaCelular","personaCorreoElectronico","Geolocation","getCurrentPosition","then","result","coords","latitude","longitude","get","valueChanges","subscribe","x","ruta","value","loading","presentLoading","postJson","res","RESPUESTA","DATOS","controls","setValue","modal","MENSAJE","e","dismiss","Camera","getPhoto","quality","allowEditing","resultType","CameraResultType","Uri","image","imageUrl","webPath","firmaBase64","persona","Object","assign","reciboID","reciboId","equiposID","map","equipoID","equipoId","clienteID","clienteId","clientePersona","estadoEntregaEquipo","reciboReferencia","datos","deleteEquipos","setRecibosServico","$event","selector","template"],"mappings":"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","file":"paginasInternas-entrega-oxigem-entrega-oxigem-module-es5.js","sourcesContent":["export default \"<ion-header class=\\\"ion-no-border\\\"  >\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button icon=\\\"chevron-back\\\" defaultHref=\\\"\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>Entregar Equipos</ion-title>\\r\\n    \\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content [fullscreen]=\\\"true\\\">\\r\\n  <ng-container >\\r\\n    <ion-grid>\\r\\n      <ion-row>\\r\\n        <ion-col size=\\\"12\\\" style=\\\"text-align: center;\\\" >\\r\\n          {{equipos.length}} Equipos a Entregar\\r\\n        </ion-col>\\r\\n      </ion-row> \\r\\n      <ion-row >\\r\\n        <ion-col size=\\\"12\\\" >\\r\\n          <strong>Persona a quien se le entrega.</strong>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row >\\r\\n        <ion-col size=\\\"12\\\"  class=\\\"text-center\\\">\\r\\n          <form [formGroup]=\\\"form_persona_entrega\\\"\\r\\n          (ngSubmit)=\\\"buscarPersona(form_persona_entrega.value)\\\">\\r\\n            <ion-item>\\r\\n              <ion-label position=\\\"floating\\\" color=\\\"primary\\\">Tipo identificación</ion-label>\\r\\n              <ion-select  formControlName=\\\"personaTipoIdentificacion\\\" placeholder=\\\"Seleccione\\\">\\r\\n                    <ion-select-option value=\\\"1\\\">CC</ion-select-option>\\r\\n                    <ion-select-option value=\\\"2\\\">NIT</ion-select-option>\\r\\n              </ion-select>\\r\\n            </ion-item>\\r\\n            <div class=\\\"validation-errors\\\">\\r\\n              <ng-container *ngFor=\\\"let validation of\\r\\n                validation_messages.personaTipoIdentificacion\\\">\\r\\n                <ion-text color=\\\"danger\\\" style=\\\"display:block;float: none;\\r\\n                  width: 100%\\\" class=\\\"error-message\\\"\\r\\n                  *ngIf=\\\"form_persona_entrega.get('personaTipoIdentificacion').hasError(validation.type)\\r\\n                  && (form_persona_entrega.get('personaTipoIdentificacion').dirty ||\\r\\n                  form_persona_entrega.get('personaTipoIdentificacion').touched)\\\">\\r\\n                  <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{\\r\\n                  validation.message }}\\r\\n                </ion-text>\\r\\n              </ng-container>\\r\\n            </div>\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"floating\\\" color=\\\"primary\\\">Identificación</ion-label>\\r\\n            <ion-input type=\\\"text\\\" formControlName=\\\"personaIdentificacion\\\"></ion-input>\\r\\n          </ion-item>\\r\\n          <div class=\\\"validation-errors\\\">\\r\\n            <ng-container *ngFor=\\\"let validation of\\r\\n              validation_messages.personaIdentificacion\\\">\\r\\n              <ion-text color=\\\"danger\\\" style=\\\"display:block;float: none;\\r\\n                width: 100%\\\" class=\\\"error-message\\\"\\r\\n                *ngIf=\\\"form_persona_entrega.get('personaIdentificacion').hasError(validation.type)\\r\\n                && (form_persona_entrega.get('personaIdentificacion').dirty ||\\r\\n                form_persona_entrega.get('personaIdentificacion').touched)\\\">\\r\\n                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{\\r\\n                validation.message }}\\r\\n              </ion-text>\\r\\n            </ng-container>\\r\\n          </div>\\r\\n            <ion-button color=\\\"primary\\\" style=\\\"margin-top: 50px;\\\"\\r\\n              class=\\\"submit-btn\\\"expand=\\\"full\\\" type=\\\"submit\\\"\\r\\n              [disabled]=\\\"!form_persona_entrega.valid\\\">Buscar</ion-button>\\r\\n          </form>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n    </ion-grid>\\r\\n  \\r\\n    <ion-grid  *ngIf=\\\"registrarPersona\\\" >\\r\\n      <ion-row >\\r\\n        <ion-col size=\\\"12\\\" >\\r\\n          <strong>Datos Persona </strong>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row >\\r\\n        <ion-col size=\\\"12\\\"  class=\\\"text-center\\\">\\r\\n          <form [formGroup]=\\\"form_registrar_persona_entrega\\\">\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"floating\\\" color=\\\"primary\\\">Nombres</ion-label>\\r\\n            <ion-input type=\\\"text\\\" formControlName=\\\"personaNombres\\\"></ion-input>\\r\\n          </ion-item>\\r\\n         <div class=\\\"validation-errors\\\">\\r\\n            <ng-container *ngFor=\\\"let validation of\\r\\n              validation_messages.personaNombres\\\">\\r\\n              <ion-text color=\\\"danger\\\" style=\\\"display:block;float: none;\\r\\n                width: 100%\\\" class=\\\"error-message\\\"\\r\\n                *ngIf=\\\"form_registrar_persona_entrega.get('personaNombres').hasError(validation.type)\\r\\n                && (form_registrar_persona_entrega.get('personaNombres').dirty ||\\r\\n                form_registrar_persona_entrega.get('personaNombres').touched)\\\">\\r\\n                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{\\r\\n                validation.message }}\\r\\n              </ion-text>\\r\\n            </ng-container>\\r\\n          </div> \\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"floating\\\" color=\\\"primary\\\">Apellidos</ion-label>\\r\\n            <ion-input type=\\\"text\\\" formControlName=\\\"personaApellidos\\\"></ion-input>\\r\\n          </ion-item>\\r\\n          <div class=\\\"validation-errors\\\">\\r\\n            <ng-container *ngFor=\\\"let validation of\\r\\n              validation_messages.personaApellidos\\\">\\r\\n              <ion-text color=\\\"danger\\\" style=\\\"display:block;float: none;\\r\\n                width: 100%\\\" class=\\\"error-message\\\"\\r\\n                *ngIf=\\\"form_registrar_persona_entrega.get('personaApellidos').hasError(validation.type)\\r\\n                && (form_registrar_persona_entrega.get('personaApellidos').dirty ||\\r\\n                form_registrar_persona_entrega.get('personaApellidos').touched)\\\">\\r\\n                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{\\r\\n                validation.message }}\\r\\n              </ion-text>\\r\\n            </ng-container>\\r\\n          </div> \\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"floating\\\" color=\\\"primary\\\">Numero celular</ion-label>\\r\\n            <ion-input type=\\\"text\\\" formControlName=\\\"personaCelular\\\"></ion-input>\\r\\n          </ion-item>\\r\\n          <div class=\\\"validation-errors\\\">\\r\\n            <ng-container *ngFor=\\\"let validation of\\r\\n              validation_messages.personaCelular\\\">\\r\\n              <ion-text color=\\\"danger\\\" style=\\\"display:block;float: none;\\r\\n                width: 100%\\\" class=\\\"error-message\\\"\\r\\n                *ngIf=\\\"form_registrar_persona_entrega.get('personaCelular').hasError(validation.type)\\r\\n                && (form_registrar_persona_entrega.get('personaCelular').dirty ||\\r\\n                form_registrar_persona_entrega.get('personaCelular').touched)\\\">\\r\\n                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{\\r\\n                validation.message }}\\r\\n              </ion-text>\\r\\n            </ng-container>\\r\\n          </div> \\r\\n  \\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"floating\\\" color=\\\"primary\\\">Correo electronico</ion-label>\\r\\n            <ion-input type=\\\"text\\\" formControlName=\\\"personaCorreoElectronico\\\"></ion-input>\\r\\n          </ion-item>\\r\\n          <div class=\\\"validation-errors\\\">\\r\\n            <ng-container *ngFor=\\\"let validation of\\r\\n              validation_messages.personaCorreoElectronico\\\">\\r\\n              <ion-text color=\\\"danger\\\" style=\\\"display:block;float: none;\\r\\n                width: 100%\\\" class=\\\"error-message\\\"\\r\\n                *ngIf=\\\"form_registrar_persona_entrega.get('personaCorreoElectronico').hasError(validation.type)\\r\\n                && (form_registrar_persona_entrega.get('personaCorreoElectronico').dirty ||\\r\\n                form_registrar_persona_entrega.get('personaCorreoElectronico').touched)\\\">\\r\\n                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{\\r\\n                validation.message }}\\r\\n              </ion-text>\\r\\n            </ng-container>\\r\\n          </div> \\r\\n          </form>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n    </ion-grid>\\r\\n   \\r\\n    <ion-grid *ngIf=\\\"formularioCompleto\\\">\\r\\n      <ion-row>\\r\\n        <ion-col size=\\\"12\\\">\\r\\n          <p>Firma</p>\\r\\n          <app-firma (firmaBase64Event)=\\\"firmaBase64Event($event)\\\"></app-firma>\\r\\n        </ion-col>\\r\\n        <!-- <ion-col size=\\\"12\\\">\\r\\n          <img src=\\\"{{firmaBase64}}\\\" />\\r\\n        </ion-col> -->\\r\\n      </ion-row>\\r\\n      <ion-row>\\r\\n        <ion-col size=\\\"12\\\">\\r\\n          <ion-list>\\r\\n            <ion-item>\\r\\n              <ion-label>Nos autoriza para utilizar su firma en los procesos necesarios del servicio.</ion-label>\\r\\n              <ion-checkbox slot=\\\"start\\\" color=\\\"success\\\" [(ngModel)]=\\\"permisosFirma\\\" (ionChange)=\\\"permisoFirma()\\\"></ion-checkbox>\\r\\n            </ion-item>\\r\\n          </ion-list>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row style=\\\"margin-bottom: 20%;\\\">\\r\\n        <ion-col size=\\\"12\\\">\\r\\n          <ion-button (click)=\\\"entregar()\\\" [disabled]=\\\"!form_registrar_persona_entrega.valid\\\" expand=\\\"block\\\"  shape=\\\"round\\\" color=\\\"success\\\" >\\r\\n             Entregar\\r\\n          </ion-button>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n    </ion-grid>\\r\\n  </ng-container>\\r\\n\\r\\n</ion-content>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { EntregaOxigemPage } from './entrega-oxigem.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: EntregaOxigemPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class EntregaOxigemPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { EntregaOxigemPageRoutingModule } from './entrega-oxigem-routing.module';\r\n\r\nimport { EntregaOxigemPage } from './entrega-oxigem.page';\r\nimport { SharedModule } from 'src/app/shareds/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    EntregaOxigemPageRoutingModule,\r\n    SharedModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: [EntregaOxigemPage]\r\n})\r\nexport class EntregaOxigemPageModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2luYXNJbnRlcm5hcy9lbnRyZWdhLW94aWdlbS9lbnRyZWdhLW94aWdlbS5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit , ViewChild, AfterViewInit} from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup, FormControl } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { BaseService } from 'src/app/service/base.service';\r\nimport { DatosEquiposService } from 'src/app/service/datos-equipos.service';\r\nimport { SweetalertService } from 'src/app/service/sweetalert.service';\r\nimport { FirmaComponent } from 'src/app/shareds/firma/firma.component';\r\nimport { Plugins } from \"@capacitor/core\";\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { DatosServicioService } from 'src/app/service/datos-servicio.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-entrega-oxigem',\r\n  templateUrl: './entrega-oxigem.page.html',\r\n  styleUrls: ['./entrega-oxigem.page.scss'],\r\n})\r\nexport class EntregaOxigemPage implements OnInit {\r\n\r\n codigo=\"xxxx\";\r\n  firmaBase64;\r\n  Servicio;\r\n  equipos;\r\n  coordenadas={lat:0,lng:0};\r\n  form_persona_entrega;\r\n  form_registrar_persona_entrega;\r\n  registrarPersona=false;\r\n  formularioCompleto=false;\r\n  personaId=\"\";\r\n  permisosFirma:boolean=false;\r\n  constructor(public DatosServicioService:DatosServicioService,private AuthService:AuthService ,public formBuilder: FormBuilder,public DatosEquiposService: DatosEquiposService,public Router:Router,private BaseService:BaseService, public Sweetalert:SweetalertService,private ActivatedRoute: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n    this.equipos=this.DatosEquiposService.getEquipos();\r\n    if(this.equipos.length){\r\n      if(this.equipos[0].otrosPendientes){\r\n        this.equipos[0].otrosPendientes.forEach(equipo => {\r\n          this.equipos.push(equipo);\r\n        });\r\n      }\r\n      console.log(\"ingresando a recoger\");\r\n      console.log(this.equipos);\r\n    }else{\r\n        this.Sweetalert.notificacion(\"info\",\"Datos Insuficientes.\")\r\n        this.Router.navigateByUrl(\"menu-principal\");\r\n    }\r\n\r\n    this.form_persona_entrega = this.formBuilder.group({\r\n      personaTipoIdentificacion: new FormControl('1', Validators.compose([Validators.required])),\r\n      personaIdentificacion: new FormControl('', Validators.compose([Validators.required]))\r\n    });\r\n\r\n    this.form_registrar_persona_entrega = this.formBuilder.group({\r\n      personaNombres: new FormControl('', Validators.compose([Validators.required])),\r\n      personaApellidos: new FormControl('', Validators.compose([Validators.required])),\r\n      personaCelular: new FormControl('', Validators.compose([Validators.required])),\r\n      personaCorreoElectronico: new FormControl('', Validators.compose([Validators.required]))\r\n    });\r\n\r\n    Plugins.Geolocation.getCurrentPosition().then(result => {\r\n      console.log(result);\r\n      this.coordenadas.lat = result.coords.latitude;\r\n      this.coordenadas.lng = result.coords.longitude; \r\n    });\r\n\r\n    /* this.takePicture(); */\r\n\r\n    this.form_persona_entrega.get(\"personaIdentificacion\").valueChanges.subscribe(x => {\r\n      this.registrarPersona=false;\r\n      this.formularioCompleto=false;\r\n   });\r\n\r\n  }\r\n\r\n  validation_messages = {\r\n    'personaTipoIdentificacion': [\r\n      { type: 'required', message: 'Tipo de identificación es requerido.' }\r\n    ],\r\n    'personaIdentificacion': [\r\n      { type: 'required', message: 'Identificación es requerida.' }\r\n    ],\r\n    'personaNombres': [\r\n      { type: 'required', message: 'Nombres es requerida.' }\r\n    ],\r\n    'personaApellidos': [\r\n      { type: 'required', message: 'Apellidos es requerida.' }\r\n    ],\r\n    'personaCelular': [\r\n      { type: 'required', message: 'Celular es requerida.' }\r\n    ],\r\n    'personaCorreoElectronico': [\r\n      { type: 'required', message: 'Correo es requerida.' }\r\n    ]\r\n  };\r\n  \r\n  irRuta(ruta){\r\n    this.Router.navigateByUrl(ruta);\r\n  }\r\n  buscarPersona(value){\r\n    this.registrarPersona=false;\r\n    this.formularioCompleto=false;\r\n    let loading=this.BaseService.presentLoading();\r\n    this.BaseService.postJson('personas','directorio',\"validarExistenciaPersonaApi\",value).subscribe(res=>{\r\n      console.log(res);\r\n      if (res.RESPUESTA==\"EXITO\") {\r\n        this.formularioCompleto=true;\r\n        this.registrarPersona=true;\r\n        this.personaId=res.DATOS.personaId;\r\n        this.form_registrar_persona_entrega.controls['personaNombres'].setValue(res.DATOS.personaNombres);\r\n        this.form_registrar_persona_entrega.controls['personaApellidos'].setValue(res.DATOS.personaApellidos);\r\n        this.form_registrar_persona_entrega.controls['personaCelular'].setValue(res.DATOS.personaCelular);\r\n        this.form_registrar_persona_entrega.controls['personaCorreoElectronico'].setValue(res.DATOS.personaCorreoElectronico);\r\n      }else if(res.RESPUESTA==\"INFO\"){\r\n        this.formularioCompleto=true;\r\n        this.registrarPersona=true;\r\n        this.personaId=\"\";\r\n        this.form_registrar_persona_entrega.controls['personaNombres'].setValue(\"\");\r\n        this.form_registrar_persona_entrega.controls['personaApellidos'].setValue(\"\");\r\n        this.form_registrar_persona_entrega.controls['personaCelular'].setValue(\"\");\r\n        this.form_registrar_persona_entrega.controls['personaCorreoElectronico'].setValue(\"\");\r\n      }else{\r\n        this.Sweetalert.modal(\"error\",res.MENSAJE);\r\n        this.personaId=\"\";\r\n      }\r\n      loading.then(e=>{\r\n        e.dismiss();});\r\n    });\r\n  }\r\n\r\n  async takePicture () {\r\n    let image = await Plugins.Camera.getPhoto({\r\n      quality: 90,\r\n      allowEditing: true,\r\n      resultType: Plugins.CameraResultType.Uri\r\n    });\r\n   /*  alert(\"ok\"); */\r\n    let  imageUrl = image.webPath;\r\n    console.log(image);\r\n  }\r\n\r\n\r\n\r\n  entregar(){\r\n    if(this.permisosFirma && this.firmaBase64 && this.equipos.length>0){\r\n      let persona=Object.assign(this.form_registrar_persona_entrega.value, this.form_persona_entrega.value);\r\n      persona.personaId=this.personaId;\r\n      let reciboID=this.equipos[0].reciboId;\r\n      let equiposID=this.equipos.map(res=>{return {equipoID:res.equipoId,clienteID:res.clienteId,clientePersona:res.clientePersona,estadoEntregaEquipo:res.estadoEntregaEquipo,reciboReferencia:res.reciboReferencia};});\r\n      let datos={\r\n        reciboID:reciboID,\r\n        firmaBase64:this.firmaBase64,\r\n        coordenadas:this.coordenadas,\r\n        equipos:equiposID,\r\n        persona:persona\r\n      };\r\n      console.log(datos);\r\n      let loading=this.BaseService.presentLoading();\r\n      this.BaseService.postJson('repartidores','entregarEquipos',\"registrarEntregaEquiposPorRecibo\",datos).subscribe(res=>{\r\n        console.log(res);\r\n        if (res.RESPUESTA=\"EXITO\") {\r\n          this.DatosEquiposService.deleteEquipos();\r\n          this.Sweetalert.notificacion(\"success\",\"Recolección exitosa\")\r\n          this.DatosServicioService.setRecibosServico(res.DATOS);\r\n          this.Router.navigateByUrl(\"recibos-servicios\");\r\n        }else{\r\n          this.Sweetalert.modal(\"error\",res.MENSAJE);\r\n        }\r\n        loading.then(e=>{\r\n          e.dismiss();});\r\n      });\r\n    }else{\r\n      this.Sweetalert.modal(\"info\",\"Datos insuficientes para la operación.\");\r\n    }\r\n    \r\n    \r\n  }\r\n\r\n  firmaBase64Event($event){\r\n    this.firmaBase64=$event;\r\n  }\r\n\r\n  permisoFirma(){\r\n    console.log(this.permisosFirma);\r\n  }\r\n}\r\n"]}